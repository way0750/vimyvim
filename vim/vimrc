set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.

" different version somewhere else.
Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'sickill/vim-monokai'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'mtscout6/syntastic-local-eslint.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
       " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal       
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" my own attemp to install plugins in vim
"let s:eslint_path = system('PATH=$(npm bin):$PATH && which eslint')
"let b:syntastic_javascript_eslint_exec = substitute(s:eslint_path, '^\n*\s*\(.\{-}\)\n*\s*$', '\1', '')

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
"the following is for enabling esilnt for syntastic
let g:syntastic_javascript_checkers = ['eslint']

inoremap jk <esc>
nnoremap <s-j> 12j
nnoremap <s-k> 12k
nnoremap <s-h> <C-w>w
nnoremap <s-l> 12l
nnoremap <d-j> 5j
nnoremap <d-k> 5k

nnoremap <s-y> :NERDTree<CR>
if has ('gui_running')
	set guifont=Roboto\ Mono\ Light\ for\ Powerline:h16
endif
colorscheme stereokai

syntax enable
colorscheme monokai

set tabstop=2
set cursorline
set number
 
":AirlineTheme {solarized dark}

let g:airline_powerline_fonts = 1

